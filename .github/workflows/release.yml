name: Release Builds

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.platform.target }}
    runs-on: ${{ matrix.platform.os }}

    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: household_management-linux-x86_64

          - os: windows-latest
            target: x86_64-pc-windows-msvc
            name: household_management-windows-x86_64.exe

          - os: macos-latest
            target: x86_64-apple-darwin
            name: household_management-macos-x86_64

          - os: macos-latest
            target: aarch64-apple-darwin
            name: household_management-macos-aarch64

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: Install dependencies (Ubuntu)
        if: matrix.platform.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev libssl-dev

      - name: Build binary
        run: cargo build --release --target ${{ matrix.platform.target }}

      - name: Package binary (Unix)
        if: matrix.platform.os != 'windows-latest'
        run: |
          cd target/${{ matrix.platform.target }}/release
          tar czf ../../../${{ matrix.platform.name }}.tar.gz household_management
          cd -

      - name: Package binary (Windows)
        if: matrix.platform.os == 'windows-latest'
        run: |
          cd target/${{ matrix.platform.target }}/release
          7z a ../../../${{ matrix.platform.name }}.zip household_management.exe
          cd -

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.name }}
          path: |
            ${{ matrix.platform.name }}.tar.gz
            ${{ matrix.platform.name }}.zip

  build-appimage:
    name: Build AppImage
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Linux binary
        uses: actions/download-artifact@v4
        with:
          name: household_management-linux-x86_64

      - name: Extract binary
        run: tar xzf household_management-linux-x86_64.tar.gz

      - name: Build AppImage
        run: |
          # Download linuxdeploy
          wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          chmod +x linuxdeploy-x86_64.AppImage

          # Create desktop file
          mkdir -p AppDir/usr/share/applications
          cat > AppDir/usr/share/applications/household_management.desktop << EOF
          [Desktop Entry]
          Type=Application
          Name=Household Management System
          Name[zh_CN]=户籍管理系统
          Comment=Household Management System
          Comment[zh_CN]=户籍管理系统
          Exec=household_management
          Icon=household_management
          Categories=Office;Database;
          Terminal=false
          EOF

          # Create simple icon
          mkdir -p AppDir/usr/share/icons/hicolor/128x128/apps
          cat > AppDir/usr/share/icons/hicolor/128x128/apps/household_management.svg << 'EOF'
          <svg width="128" height="128" xmlns="http://www.w3.org/2000/svg">
            <rect width="128" height="128" fill="#2196F3" rx="16"/>
            <text x="64" y="75" font-family="Arial" font-size="24" fill="white" text-anchor="middle">户籍</text>
          </svg>
          EOF

          # Build AppImage
          mkdir -p AppDir/usr/bin
          cp household_management AppDir/usr/bin/
          chmod +x AppDir/usr/bin/household_management

          ./linuxdeploy-x86_64.AppImage --appdir AppDir --output appimage

          # Find and rename the generated AppImage
          find . -name "*.AppImage" -exec mv {} household_management-linux-x86_64.AppImage \;

      - name: Upload AppImage
        uses: actions/upload-artifact@v4
        with:
          name: household_management-linux-x86_64.AppImage
          path: household_management-linux-x86_64.AppImage

  build-macos-universal:
    name: Build macOS Universal DMG
    runs-on: macos-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download macOS binaries
        uses: actions/download-artifact@v4
        with:
          pattern: household_management-macos-*
          merge-multiple: true

      - name: Extract binaries
        run: |
          tar xzf household_management-macos-x86_64.tar.gz
          mv household_management household_management-x86_64
          tar xzf household_management-macos-aarch64.tar.gz  
          mv household_management household_management-aarch64

      - name: Create universal binary
        run: |
          lipo -create -output household_management household_management-x86_64 household_management-aarch64
          chmod +x household_management

      - name: Create macOS app bundle
        run: |
          mkdir -p "户籍管理系统.app/Contents/MacOS"
          mkdir -p "户籍管理系统.app/Contents/Resources"

          cp household_management "户籍管理系统.app/Contents/MacOS/"

          cat > "户籍管理系统.app/Contents/Info.plist" << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>CFBundleExecutable</key>
              <string>household_management</string>
              <key>CFBundleIdentifier</key>
              <string>com.household.management</string>
              <key>CFBundleName</key>
              <string>户籍管理系统</string>
              <key>CFBundleDisplayName</key>
              <string>户籍管理系统</string>
              <key>CFBundleVersion</key>
              <string>1.0.0</string>
              <key>CFBundleShortVersionString</key>
              <string>1.0.0</string>
              <key>CFBundlePackageType</key>
              <string>APPL</string>
              <key>LSMinimumSystemVersion</key>
              <string>10.12</string>
              <key>NSHighResolutionCapable</key>
              <true/>
              <key>LSApplicationCategoryType</key>
              <string>public.app-category.business</string>
          </dict>
          </plist>
          EOF

      - name: Create DMG
        run: |
          mkdir dmg_temp
          cp -r "户籍管理系统.app" dmg_temp/

          # Create a symlink to Applications folder
          ln -s /Applications dmg_temp/Applications

          # Create DMG
          hdiutil create -volname "户籍管理系统" -srcfolder dmg_temp -ov -format UDZO household_management-macos-universal.dmg

      - name: Upload DMG
        uses: actions/upload-artifact@v4
        with:
          name: household_management-macos-universal.dmg
          path: household_management-macos-universal.dmg

  release:
    name: Create Release
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [build, build-appimage, build-macos-universal]

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            household_management-linux-x86_64.AppImage/household_management-linux-x86_64.AppImage
            household_management-macos-universal.dmg/household_management-macos-universal.dmg
            household_management-windows-x86_64.exe/household_management-windows-x86_64.exe.zip
            household_management-linux-x86_64/household_management-linux-x86_64.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
